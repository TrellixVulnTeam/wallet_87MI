{"ast":null,"code":"var _jsxFileName = \"/Users/michaelchang/Desktop/wallet/src/components/MonthlyForm.js\",\n    _s = $RefreshSig$();\n\nimport { Button, FormGroup, Input, InputAdornment, MenuItem, TextField } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { categories } from \"../constants/form\";\nimport { useDispatch } from \"react-redux\";\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\nimport { useAllItemsState, useMainState } from \"../reducers/mainReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MonthlyForm() {\n  _s();\n\n  const [category, setCategory] = useState(\"\");\n  const [value, setValue] = useState();\n  const [enteringData, setEnteringData] = useState(true);\n  const [list, setList] = useState();\n  const [error, setError] = useState();\n  const {\n    labels,\n    setLabels\n  } = useMainState();\n  const {\n    allItems,\n    setAllItems\n  } = useAllItemsState();\n  useEffect(() => {\n    setList(labels);\n  }, [labels]);\n\n  const reset = () => {\n    setCategory(\"\");\n    setValue(\"\");\n    setEnteringData(true);\n  };\n\n  const random_rgba = () => {\n    var o = Math.round,\n        r = Math.random,\n        s = 255;\n    return \"rgba(\" + o(r() * s) + \",\" + o(r() * s) + \",\" + o(r() * s) + \",\" + r().toFixed(1) + \")\";\n  };\n\n  const handleAdd = () => {\n    setError(\"\");\n    setEnteringData(false);\n\n    if (category && value) {\n      const newItem = {\n        id: allItems.length + 1,\n        label: category,\n        value: value,\n        color: random_rgba() //\"#\" + Math.floor(Math.random() * 16777215).toString(16),\n\n      };\n      setAllItems(newItem);\n      reset();\n    } else {\n      setError(\"error\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    className: \"form_control\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-select-category\",\n      select: true,\n      label: \"Select\",\n      value: category,\n      onChange: e => setCategory(e.target.value),\n      helperText: \"Please select your category\",\n      children: categories.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: option.value,\n        children: option.label\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CurrencyTextField, {\n        label: \"Amount\",\n        variant: \"standard\",\n        value: value,\n        currencySymbol: \"$\",\n        minimumValue: \"0\",\n        outputFormat: \"string\",\n        decimalCharacter: \".\",\n        digitGroupSeparator: \",\",\n        onChange: (e, value) => setValue(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: () => handleAdd(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MonthlyForm, \"wxqzEeWA0Wa47keCQeZeSKPTsLM=\", false, function () {\n  return [useMainState, useAllItemsState];\n});\n\n_c = MonthlyForm;\nexport default MonthlyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonthlyForm\");","map":{"version":3,"sources":["/Users/michaelchang/Desktop/wallet/src/components/MonthlyForm.js"],"names":["Button","FormGroup","Input","InputAdornment","MenuItem","TextField","React","useState","useEffect","useSelector","categories","useDispatch","CurrencyTextField","useAllItemsState","useMainState","MonthlyForm","category","setCategory","value","setValue","enteringData","setEnteringData","list","setList","error","setError","labels","setLabels","allItems","setAllItems","reset","random_rgba","o","Math","round","r","random","s","toFixed","handleAdd","newItem","id","length","label","color","e","target","map","option"],"mappings":"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","sourcesContent":["import {\n  Button,\n  FormGroup,\n  Input,\n  InputAdornment,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { categories } from \"../constants/form\";\nimport { useDispatch } from \"react-redux\";\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\n\nimport { useAllItemsState, useMainState } from \"../reducers/mainReducer\";\n\nfunction MonthlyForm() {\n  const [category, setCategory] = useState(\"\");\n  const [value, setValue] = useState();\n  const [enteringData, setEnteringData] = useState(true);\n\n  const [list, setList] = useState();\n  const [error, setError] = useState();\n\n  const { labels, setLabels } = useMainState();\n  const { allItems, setAllItems } = useAllItemsState();\n  useEffect(() => {\n    setList(labels);\n  }, [labels]);\n\n  \n  const reset = () => {\n    setCategory(\"\");\n    setValue(\"\");\n    setEnteringData(true);\n  };\n  const random_rgba = () => {\n    var o = Math.round,\n      r = Math.random,\n      s = 255;\n    return (\n      \"rgba(\" +\n      o(r() * s) +\n      \",\" +\n      o(r() * s) +\n      \",\" +\n      o(r() * s) +\n      \",\" +\n      r().toFixed(1) +\n      \")\"\n    );\n  };\n\n  const handleAdd = () => {\n    setError(\"\");\n    setEnteringData(false);\n    if (category && value) {\n      const newItem = {\n        id: allItems.length + 1,\n        label: category,\n        value: value,\n        color: random_rgba(), //\"#\" + Math.floor(Math.random() * 16777215).toString(16),\n      };\n      setAllItems(newItem);\n      reset();\n    } else {\n      setError(\"error\");\n    }\n  };\n  return (\n    <FormGroup className=\"form_control\">\n      <TextField\n        id=\"standard-select-category\"\n        select\n        label=\"Select\"\n        value={category}\n        onChange={(e) => setCategory(e.target.value)}\n        helperText=\"Please select your category\"\n      >\n        {categories.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <div>\n        \n        <CurrencyTextField\n          label=\"Amount\"\n          variant=\"standard\"\n          value={value}\n          currencySymbol=\"$\"\n          minimumValue=\"0\"\n          outputFormat=\"string\"\n          decimalCharacter=\".\"\n          digitGroupSeparator=\",\"\n          onChange={(e, value) => setValue(value)}\n        />\n      </div>\n\n      <Button type=\"submit\" onClick={() => handleAdd()}>\n        Submit\n      </Button>\n      <div> {error}</div>\n    </FormGroup>\n  );\n}\n\nexport default MonthlyForm;\n"]},"metadata":{},"sourceType":"module"}