{"ast":null,"code":"var _jsxFileName = \"/Users/michaelchang/Desktop/wallet/src/components/Drawer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Drawer, Button, List, Divider, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport useToken, { logout } from \"../utils\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\nexport default function MainDrawer() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    left: false\n  });\n  const {\n    token,\n    setToken\n  } = useToken();\n  const history = useHistory();\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const logout = () => {\n    history.push(\"/login\");\n    sessionStorage.clear();\n  };\n\n  const menuOptions = [{\n    text: \"Home\",\n    icon: /*#__PURE__*/_jsxDEV(HomeIcon, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 27\n    }, this)\n  }, {\n    text: \"Sign Out\",\n    icon: /*#__PURE__*/_jsxDEV(ExitToAppIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this),\n    onClick: () => logout() //setToken({ token: \"\" }),\n\n  }];\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.list),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: menuOptions.map(option => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          onClick: () => option.onClick(),\n          children: option.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: option.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, option.text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n\n  const ANCHOR = \"left\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleDrawer(ANCHOR, true),\n      children: \"Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: ANCHOR,\n      open: state[ANCHOR],\n      onClose: toggleDrawer(ANCHOR, false),\n      children: list(ANCHOR)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainDrawer, \"7SmzWu0mV/HUITbGdlezCa/i0UE=\", false, function () {\n  return [useStyles, useToken, useHistory];\n});\n\n_c = MainDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainDrawer\");","map":{"version":3,"sources":["/Users/michaelchang/Desktop/wallet/src/components/Drawer.js"],"names":["React","useState","clsx","makeStyles","Drawer","Button","List","Divider","ListItem","ListItemIcon","ListItemText","HomeIcon","ExitToAppIcon","useToken","logout","useHistory","useStyles","list","width","fullList","MainDrawer","classes","state","setState","left","token","setToken","history","toggleDrawer","anchor","open","event","type","key","push","sessionStorage","clear","menuOptions","text","icon","onClick","map","option","ANCHOR"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Drawer,\n  Button,\n  List,\n  Divider,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport useToken, { logout } from \"../utils\";\nimport { useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\nexport default function MainDrawer() {\n  const classes = useStyles();\n  const [state, setState] = useState({ left: false });\n  const { token, setToken } = useToken();\n  const history = useHistory();\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  const logout = () => {\n    history.push(\"/login\");\n    sessionStorage.clear();\n  };\n  const menuOptions = [\n    { text: \"Home\", icon: <HomeIcon color=\"primary\" /> },\n    {\n      text: \"Sign Out\",\n      icon: <ExitToAppIcon />,\n      onClick: () => logout(), //setToken({ token: \"\" }),\n    },\n  ];\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list)}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {menuOptions.map((option) => (\n          <ListItem button key={option.text}>\n            <ListItemIcon onClick={() => option.onClick()}>\n              {option.icon}\n            </ListItemIcon>\n            <ListItemText primary={option.text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n    </div>\n  );\n  const ANCHOR = \"left\";\n\n  return (\n    <div>\n      <Button onClick={toggleDrawer(ANCHOR, true)}>Menu</Button>\n      <Drawer\n        anchor={ANCHOR}\n        open={state[ANCHOR]}\n        onClose={toggleDrawer(ANCHOR, false)}\n      >\n        {list(ANCHOR)}\n      </Drawer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}