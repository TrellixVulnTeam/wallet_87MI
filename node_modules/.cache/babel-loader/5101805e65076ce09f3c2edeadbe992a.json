{"ast":null,"code":"var _jsxFileName = \"/Users/michaelchang/Desktop/wallet/src/components/MonthlyPie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst test_data = {\n  labels: [\"Red\", \"Blue\", \"Yellow\"],\n  datasets: [{\n    label: \"My First Dataset\",\n    data: [300, 50, 100],\n    backgroundColor: [\"rgb(255, 99, 132)\", \"rgb(54, 162, 235)\", \"rgb(255, 205, 86)\"],\n    hoverOffset: 4\n  }]\n};\n\nfunction MonthlyPie({\n  data,\n  entering\n}) {\n  _s();\n\n  const [state, setState] = useState();\n  let processedData = {};\n  useEffect(() => {\n    // if (!entering) {\n    console.log(entering);\n    processedData = {\n      labels: data.map(item => item.category),\n      datasets: [{\n        label: \"Rainfall\",\n        data: data.map(item => parseFloat(item.totalValue)),\n        backgroundColor: data.map(item => item.color),\n        borderColor: data.map(item => item.color)\n      }]\n    };\n    setState(processedData); // }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: state,\n        options: {\n          title: {\n            display: true,\n            text: \"Average Rainfall per month\",\n            fontSize: 20\n          },\n          legend: {\n            display: true,\n            position: \"right\"\n          },\n          animation: {\n            duration: 3000\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), \")}\"]\n  }, void 0, true);\n}\n\n_s(MonthlyPie, \"3gZZgqrmxdIL2lkJNp8YWce6YNU=\");\n\n_c = MonthlyPie;\nexport default MonthlyPie;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonthlyPie\");","map":{"version":3,"sources":["/Users/michaelchang/Desktop/wallet/src/components/MonthlyPie.js"],"names":["React","useEffect","useState","Pie","test_data","labels","datasets","label","data","backgroundColor","hoverOffset","MonthlyPie","entering","state","setState","processedData","console","log","map","item","category","parseFloat","totalValue","color","borderColor","title","display","text","fontSize","legend","position","animation","duration"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,CADQ;AAEhBC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,kBADT;AAEEC,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV,CAFR;AAGEC,IAAAA,eAAe,EAAE,CACf,mBADe,EAEf,mBAFe,EAGf,mBAHe,CAHnB;AAQEC,IAAAA,WAAW,EAAE;AARf,GADQ;AAFM,CAAlB;;AAeA,SAASC,UAAT,CAAoB;AAAEH,EAAAA,IAAF;AAAQI,EAAAA;AAAR,CAApB,EAAwC;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;AACA,MAAIa,aAAa,GAAG,EAApB;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAG,IAAAA,aAAa,GAAG;AACdV,MAAAA,MAAM,EAAEG,IAAI,CAACU,GAAL,CAAUC,IAAD,IAAUA,IAAI,CAACC,QAAxB,CADM;AAEdd,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,UADT;AAGEC,QAAAA,IAAI,EAAEA,IAAI,CAACU,GAAL,CAAUC,IAAD,IAAUE,UAAU,CAACF,IAAI,CAACG,UAAN,CAA7B,CAHR;AAIEb,QAAAA,eAAe,EAAED,IAAI,CAACU,GAAL,CAAUC,IAAD,IAAUA,IAAI,CAACI,KAAxB,CAJnB;AAKEC,QAAAA,WAAW,EAAEhB,IAAI,CAACU,GAAL,CAAUC,IAAD,IAAUA,IAAI,CAACI,KAAxB;AALf,OADQ;AAFI,KAAhB;AAYAT,IAAAA,QAAQ,CAACC,aAAD,CAAR,CAfc,CAgBd;AACD,GAjBQ,EAiBN,CAACP,IAAD,CAjBM,CAAT;AAkBA,sBACE;AAAA,4BAEI;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,IAAI,EAAEK,KADR;AAEE,QAAA,OAAO,EAAE;AACPY,UAAAA,KAAK,EAAE;AACLC,YAAAA,OAAO,EAAE,IADJ;AAELC,YAAAA,IAAI,EAAE,4BAFD;AAGLC,YAAAA,QAAQ,EAAE;AAHL,WADA;AAMPC,UAAAA,MAAM,EAAE;AACNH,YAAAA,OAAO,EAAE,IADH;AAENI,YAAAA,QAAQ,EAAE;AAFJ,WAND;AAUPC,UAAAA,SAAS,EAAE;AACTC,YAAAA,QAAQ,EAAE;AADD;AAVJ;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADF;AAyBD;;GA9CQrB,U;;KAAAA,U;AAgDT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\n\nconst test_data = {\n  labels: [\"Red\", \"Blue\", \"Yellow\"],\n  datasets: [\n    {\n      label: \"My First Dataset\",\n      data: [300, 50, 100],\n      backgroundColor: [\n        \"rgb(255, 99, 132)\",\n        \"rgb(54, 162, 235)\",\n        \"rgb(255, 205, 86)\",\n      ],\n      hoverOffset: 4,\n    },\n  ],\n};\nfunction MonthlyPie({ data, entering }) {\n  const [state, setState] = useState();\n  let processedData = {};\n  useEffect(() => {\n    // if (!entering) {\n    console.log(entering);\n    processedData = {\n      labels: data.map((item) => item.category),\n      datasets: [\n        {\n          label: \"Rainfall\",\n\n          data: data.map((item) => parseFloat(item.totalValue)),\n          backgroundColor: data.map((item) => item.color),\n          borderColor: data.map((item) => item.color),\n        },\n      ],\n    };\n    setState(processedData);\n    // }\n  }, [data]);\n  return (\n    <>\n      {/* {state && ( */}\n        <div>\n          <Pie\n            data={state}\n            options={{\n              title: {\n                display: true,\n                text: \"Average Rainfall per month\",\n                fontSize: 20,\n              },\n              legend: {\n                display: true,\n                position: \"right\",\n              },\n              animation: {\n                duration: 3000,\n              },\n            }}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default MonthlyPie;\n"]},"metadata":{},"sourceType":"module"}