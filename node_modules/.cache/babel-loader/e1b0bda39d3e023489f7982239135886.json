{"ast":null,"code":"var _jsxFileName = \"/Users/michaelchang/Desktop/wallet/src/components/Drawer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\nexport default function TemporaryDrawer() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    left: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const menuOptions = [{\n    text: \"Home\",\n    icon: /*#__PURE__*/_jsxDEV(HomeIcon, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }, this)\n  }, {\n    text: \"Sign Out\",\n    icon: /*#__PURE__*/_jsxDEV(ExitToAppIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 31\n    }, this)\n  }];\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.list),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: menuOptions.map(option => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: option.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: option.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, option.text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  const ANCHOR = \"left\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer(ANCHOR, true),\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: ANCHOR,\n        open: state[ANCHOR],\n        onClose: toggleDrawer(ANCHOR, false),\n        children: list(ANCHOR)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, ANCHOR, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TemporaryDrawer, \"vCn+ZzsmgkLGHb0j4yfeyVDR0u8=\", false, function () {\n  return [useStyles];\n});\n\n_c = TemporaryDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemporaryDrawer\");","map":{"version":3,"sources":["/Users/michaelchang/Desktop/wallet/src/components/Drawer.js"],"names":["React","useState","clsx","makeStyles","Drawer","Button","List","Divider","ListItem","ListItemIcon","ListItemText","HomeIcon","ExitToAppIcon","useStyles","list","width","fullList","TemporaryDrawer","classes","state","setState","left","toggleDrawer","anchor","open","event","type","key","menuOptions","text","icon","map","option","ANCHOR"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  const menuOptions = [\n    { text: \"Home\", icon: <HomeIcon color=\"primary\" /> },\n    { text: \"Sign Out\", icon: <ExitToAppIcon /> },\n  ];\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list)}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {menuOptions.map((option) => (\n          <ListItem button key={option.text}>\n            <ListItemIcon>{option.icon}</ListItemIcon>\n            <ListItemText primary={option.text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n    </div>\n  );\n  const ANCHOR = \"left\";\n\n  return (\n    <div>\n      <React.Fragment key={ANCHOR}>\n        <Button onClick={toggleDrawer(ANCHOR, true)}>Menu</Button>\n        <Drawer\n          anchor={ANCHOR}\n          open={state[ANCHOR]}\n          onClose={toggleDrawer(ANCHOR, false)}\n        >\n          {list(ANCHOR)}\n        </Drawer>\n      </React.Fragment>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}