{"ast":null,"code":"var _jsxFileName = \"/Users/michaelchang/Desktop/wallet/src/components/MonthlyTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useCallback, useMemo } from \"react\";\nimport { useAllItemsState, useMainState } from \"../reducers/mainReducer\";\nimport MonthlyPie from \"./MonthlyPie\";\nimport MonthlyForm from \"./MonthlyForm\";\nimport { Box, Collapse, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@material-ui/core\";\nimport { categories } from \"../constants/form\";\nimport { formatter } from \"../utils/index\";\nimport ExpandIcon from \"./Table/ExpandIcon\";\nimport History from \"./Table/History\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Row = ({\n  category,\n  rows\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const obj = rows.find(o => o.category === category.label);\n  console.log(obj);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(ExpandIcon, {\n          setOpen: setOpen,\n          open: open\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: category.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: obj ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formatter.format(obj.totalValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 18\n        }, this) : \"N/A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, category.label, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      style: {\n        paddingBottom: 0,\n        paddingTop: 0\n      },\n      colSpan: 6,\n      children: /*#__PURE__*/_jsxDEV(History, {\n        open: open,\n        obj: obj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Row, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = Row;\n\nfunction MonthlyTable({\n  data\n}) {\n  _s2();\n\n  const {\n    allItems\n  } = useAllItemsState();\n  const [enteringData, setEnteringData] = useState(true);\n  const [rows, setRows] = useState([]);\n\n  const createData = (category, value) => {\n    return {\n      category,\n      value\n    };\n  };\n\n  useEffect(() => {\n    const processedRows = allItems.map(item => createData(item.category, item.totalValue));\n    console.log(processedRows);\n    setRows(processedRows);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    className: \"table_container\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Value\\xA0($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: categories.map((category, idx) => /*#__PURE__*/_jsxDEV(Row, {\n          category: category,\n          rows: allItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(MonthlyTable, \"YhAGj95/GAE45lcOsxOs1SewOPk=\", false, function () {\n  return [useAllItemsState];\n});\n\n_c2 = MonthlyTable;\nexport default MonthlyTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"MonthlyTable\");","map":{"version":3,"sources":["/Users/michaelchang/Desktop/wallet/src/components/MonthlyTable.js"],"names":["React","useState","useContext","useEffect","useCallback","useMemo","useAllItemsState","useMainState","MonthlyPie","MonthlyForm","Box","Collapse","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","categories","formatter","ExpandIcon","History","Row","category","rows","open","setOpen","obj","find","o","label","console","log","format","totalValue","paddingBottom","paddingTop","MonthlyTable","data","allItems","enteringData","setEnteringData","setRows","createData","value","processedRows","map","item","idx"],"mappings":";;;;AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,OALF,QAMO,OANP;AAOA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,yBAA/C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACEC,GADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,cAPF,EAQEC,SARF,EASEC,QATF,EAUEC,UAVF,QAWO,mBAXP;AAYA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;;;AACA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM4B,GAAG,GAAGH,IAAI,CAACI,IAAL,CAAWC,CAAD,IAAOA,CAAC,CAACN,QAAF,KAAeA,QAAQ,CAACO,KAAzC,CAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AAEA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAED,OAArB;AAA8B,UAAA,IAAI,EAAED;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,IAArB;AAA0B,QAAA,KAAK,EAAC,KAAhC;AAAA,kBACGF,QAAQ,CAACO;AADZ;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA,kBACGH,GAAG,gBAAG;AAAA,oBAAMR,SAAS,CAACc,MAAV,CAAiBN,GAAG,CAACO,UAArB;AAAN;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAmD;AADzD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OAAeX,QAAQ,CAACO,KAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEK,QAAAA,aAAa,EAAE,CAAjB;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAlB;AAAuD,MAAA,OAAO,EAAE,CAAhE;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEX,IAAf;AAAqB,QAAA,GAAG,EAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAkBD,CAvBD;;GAAML,G;;KAAAA,G;;AAwBN,SAASe,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAgC;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAenC,gBAAgB,EAArC;AACA,QAAM,CAACoC,YAAD,EAAeC,eAAf,IAAkC1C,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACyB,IAAD,EAAOkB,OAAP,IAAkB3C,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAM4C,UAAU,GAAG,CAACpB,QAAD,EAAWqB,KAAX,KAAqB;AACtC,WAAO;AAAErB,MAAAA,QAAF;AAAYqB,MAAAA;AAAZ,KAAP;AACD,GAFD;;AAIA3C,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM4C,aAAa,GAAGN,QAAQ,CAACO,GAAT,CAAcC,IAAD,IACjCJ,UAAU,CAACI,IAAI,CAACxB,QAAN,EAAgBwB,IAAI,CAACb,UAArB,CADU,CAAtB;AAGAH,IAAAA,OAAO,CAACC,GAAR,CAAYa,aAAZ;AACAH,IAAAA,OAAO,CAACG,aAAD,CAAP;AACD,GANQ,EAMN,CAACP,IAAD,CANM,CAAT;AAQA,sBACE,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,iBAA1B;AAAA,2BACE,QAAC,KAAD;AAAO,oBAAW,cAAlB;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,SAAD;AAAA,kBACGpB,UAAU,CAAC4B,GAAX,CAAe,CAACvB,QAAD,EAAWyB,GAAX,kBACd,QAAC,GAAD;AAAK,UAAA,QAAQ,EAAEzB,QAAf;AAAyB,UAAA,IAAI,EAAEgB;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;IAnCQF,Y;UACcjC,gB;;;MADdiC,Y;AAoCT,eAAeA,YAAf","sourcesContent":["import React, {\n  useState,\n  useContext,\n  useEffect,\n  useCallback,\n  useMemo,\n} from \"react\";\nimport { useAllItemsState, useMainState } from \"../reducers/mainReducer\";\nimport MonthlyPie from \"./MonthlyPie\";\nimport MonthlyForm from \"./MonthlyForm\";\nimport {\n  Box,\n  Collapse,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\nimport { categories } from \"../constants/form\";\nimport { formatter } from \"../utils/index\";\nimport ExpandIcon from \"./Table/ExpandIcon\";\nimport History from \"./Table/History\";\nconst Row = ({ category, rows }) => {\n  const [open, setOpen] = useState(false);\n  const obj = rows.find((o) => o.category === category.label);\n  console.log(obj);\n\n  return (\n    <>\n      <TableRow key={category.label}>\n        <TableCell>\n          <ExpandIcon setOpen={setOpen} open={open}/>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {category.label}\n        </TableCell>\n        <TableCell align=\"right\">\n          {obj ? <div>{formatter.format(obj.totalValue)}</div> : \"N/A\"}\n        </TableCell>\n      </TableRow>\n      <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n        <History open={open} obj={obj} />\n      </TableCell>\n    </>\n  );\n};\nfunction MonthlyTable({ data }) {\n  const { allItems } = useAllItemsState();\n  const [enteringData, setEnteringData] = useState(true);\n  const [rows, setRows] = useState([]);\n\n  const createData = (category, value) => {\n    return { category, value };\n  };\n\n  useEffect(() => {\n    const processedRows = allItems.map((item) =>\n      createData(item.category, item.totalValue)\n    );\n    console.log(processedRows);\n    setRows(processedRows);\n  }, [data]);\n\n  return (\n    <TableContainer className=\"table_container\">\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Category</TableCell>\n            <TableCell align=\"right\">Value&nbsp;($)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {categories.map((category, idx) => (\n            <Row category={category} rows={allItems} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\nexport default MonthlyTable;\n"]},"metadata":{},"sourceType":"module"}