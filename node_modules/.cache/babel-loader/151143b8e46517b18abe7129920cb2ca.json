{"ast":null,"code":"var _jsxFileName = \"/Users/michaelchang/Desktop/wallet/src/components/MonthlyTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useCallback, useMemo } from \"react\";\nimport { useAllItemsState, useMainState } from \"../reducers/mainReducer\";\nimport MonthlyPie from \"./MonthlyPie\";\nimport MonthlyForm from \"./MonthlyForm\";\nimport { IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\nimport { categories } from \"../constants/form\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Row = props => {\n  const {\n    category,\n    se\n  } = props;\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"expand row\",\n        size: \"small\",\n        onClick: () => setOpen(!open),\n        children: open ? /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      children: category.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"right\",\n      children: rows.find(o => o.category === category.label) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", formatter.format(rows.find(o => o.category === category.label).value), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, category.label, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Row;\n\nfunction MonthlyTable({\n  data\n}) {\n  _s();\n\n  const {\n    allItems\n  } = useAllItemsState();\n  const [enteringData, setEnteringData] = useState(true);\n  const [rows, setRows] = useState([]);\n  const [open, setOpen] = useState();\n\n  const createData = (category, value) => {\n    return {\n      category,\n      value\n    };\n  };\n\n  useEffect(() => {\n    const processedRows = allItems.map(item => createData(item.label, item.value));\n    console.log(processedRows);\n    setRows(processedRows);\n  }, [data]);\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n  console.log(\"here\", rows);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Value\\xA0($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: categories.map((category, idx) => /*#__PURE__*/_jsxDEV(Row, {\n          props: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MonthlyTable, \"mDrzMGeFrt5Gfc2CcmFVymEkEsQ=\", false, function () {\n  return [useAllItemsState];\n});\n\n_c2 = MonthlyTable;\nexport default MonthlyTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"MonthlyTable\");","map":{"version":3,"sources":["/Users/michaelchang/Desktop/wallet/src/components/MonthlyTable.js"],"names":["React","useState","useContext","useEffect","useCallback","useMemo","useAllItemsState","useMainState","MonthlyPie","MonthlyForm","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","categories","KeyboardArrowDownIcon","KeyboardArrowUpIcon","Row","props","category","se","setOpen","open","label","rows","find","o","formatter","format","value","MonthlyTable","data","allItems","enteringData","setEnteringData","setRows","createData","processedRows","map","item","console","log","Intl","NumberFormat","style","currency","idx"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useContext,\n  useEffect,\n  useCallback,\n  useMemo,\n} from \"react\";\nimport { useAllItemsState, useMainState } from \"../reducers/mainReducer\";\nimport MonthlyPie from \"./MonthlyPie\";\nimport MonthlyForm from \"./MonthlyForm\";\nimport {\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { categories } from \"../constants/form\";\n\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst Row = (props) => {\n  const { category, se } = props;\n  return (\n    <TableRow key={category.label}>\n      <TableCell>\n        {\" \"}\n        <IconButton\n          aria-label=\"expand row\"\n          size=\"small\"\n          onClick={() => setOpen(!open)}\n        >\n          {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n        </IconButton>\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {category.label}\n      </TableCell>\n      <TableCell align=\"right\">\n        {rows.find((o) => o.category === category.label) ? (\n          <div>\n            {\" \"}\n            {formatter.format(\n              rows.find((o) => o.category === category.label).value\n            )}{\" \"}\n          </div>\n        ) : (\n          \"N/A\"\n        )}\n      </TableCell>\n    </TableRow>\n  );\n};\nfunction MonthlyTable({ data }) {\n  const { allItems } = useAllItemsState();\n  const [enteringData, setEnteringData] = useState(true);\n  const [rows, setRows] = useState([]);\n  const [open, setOpen] = useState();\n\n  const createData = (category, value) => {\n    return { category, value };\n  };\n\n  useEffect(() => {\n    const processedRows = allItems.map((item) =>\n      createData(item.label, item.value)\n    );\n    console.log(processedRows);\n    setRows(processedRows);\n  }, [data]);\n\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  });\n  console.log(\"here\", rows);\n\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Category</TableCell>\n            <TableCell align=\"right\">Value&nbsp;($)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {categories.map((category, idx) => (\n            <Row props={category} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\nexport default MonthlyTable;\n"]},"metadata":{},"sourceType":"module"}