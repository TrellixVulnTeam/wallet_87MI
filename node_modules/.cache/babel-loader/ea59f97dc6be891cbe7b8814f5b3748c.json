{"ast":null,"code":"var _jsxFileName = \"/Users/michaelchang/Desktop/wallet/src/router/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport useToken, { isLogin } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    token,\n    setToken\n  } = useToken();\n  const [login, setLogin] = useState();\n  useEffect(() => {\n    console.log(\"token\", token);\n    setLogin(token.token);\n  }, [token], lo);\n  return (\n    /*#__PURE__*/\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    _jsxDEV(Route, { ...rest,\n      render: props => login ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(PrivateRoute, \"h1cZAES4vm0GwV2JA8vXO+jWL10=\", false, function () {\n  return [useToken];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/michaelchang/Desktop/wallet/src/router/PrivateRoute.js"],"names":["React","useEffect","useState","Route","Redirect","useToken","isLogin","PrivateRoute","component","Component","rest","token","setToken","login","setLogin","console","log","lo","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,QAAP,IAAmBC,OAAnB,QAAkC,UAAlC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC1D,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBP,QAAQ,EAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAArB;AACAG,IAAAA,QAAQ,CAACH,KAAK,CAACA,KAAP,CAAR;AACD,GAHQ,EAGP,CAACA,KAAD,CAHO,EAGEM,EAHF,CAAT;AAKA;AAAA;AACE;AACA;AACA,YAAC,KAAD,OACMP,IADN;AAEE,MAAA,MAAM,EAAGQ,KAAD,IACNL,KAAK,gBAAG,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,cAAH,gBAA8B,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHvC;AAAA;AAAA;AAAA;AAAA;AAHF;AAUD,CAlBD;;GAAMX,Y;UACwBF,Q;;;KADxBE,Y;AAoBN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport useToken, { isLogin } from \"../utils\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { token, setToken } = useToken();\n  const [login, setLogin] = useState();\n  useEffect(() => {\n    console.log(\"token\", token);\n    setLogin(token.token);\n  },[token], lo);\n\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        login ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}