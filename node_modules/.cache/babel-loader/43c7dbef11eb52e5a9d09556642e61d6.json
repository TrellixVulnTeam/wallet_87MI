{"ast":null,"code":"var _jsxFileName = \"/Users/michaelchang/Desktop/wallet/src/components/MonthlyForm.js\",\n    _s = $RefreshSig$();\n\nimport { Button, CircularProgress, FormGroup, Input, InputAdornment, MenuItem, TextField } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { categories } from \"../constants/form\";\nimport { useDispatch } from \"react-redux\";\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\nimport { useAllItemsState, useMainState } from \"../reducers/mainReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MonthlyForm() {\n  _s();\n\n  const [category, setCategory] = useState(\"\");\n  const [value, setValue] = useState(0);\n  const [enteringData, setEnteringData] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [list, setList] = useState();\n  const [error, setError] = useState();\n  const [description, setDescription] = useState(\"\");\n  const {\n    labels,\n    setLabels\n  } = useMainState();\n  const {\n    allItems,\n    setAllItems\n  } = useAllItemsState();\n  useEffect(() => {\n    setList(labels);\n  }, [labels]);\n\n  const reset = () => {\n    setCategory(\"\");\n    setValue(0);\n    setDescription(\"\");\n    setEnteringData(true);\n    setLoading(false);\n  };\n\n  const generateColor = () => {\n    return \"#\" + (Math.random().toString(16) + \"000000\").substring(2, 8);\n  };\n\n  const handleAdd = () => {\n    setError(\"\");\n    setLoading(true);\n    setEnteringData(false);\n    setTimeout();\n\n    if (category && value) {\n      const newItem = {\n        id: allItems.length + 1,\n        label: category,\n        value: Number(value),\n        color: generateColor(),\n        //\"#\" + Math.floor(Math.random() * 16777215).toString(16),\n        description: description\n      };\n      setAllItems(newItem);\n      reset();\n    } else {\n      setError(\"error\");\n      setLoading(false);\n    }\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(FormGroup, {\n    className: \"form_control\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"form_control__input\",\n        id: \"standard-select-category\",\n        select: true,\n        label: \"Select\",\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        helperText: \"Please select your category\",\n        children: categories.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-multiline-flexible\",\n        label: \"Multiline\",\n        multiline: true,\n        maxRows: 4,\n        value: value,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CurrencyTextField, {\n        className: \"form_control--input\",\n        label: \"Amount\",\n        variant: \"standard\",\n        value: value,\n        currencySymbol: \"$\",\n        minimumValue: \"0\",\n        outputFormat: \"string\",\n        decimalCharacter: \".\",\n        digitGroupSeparator: \",\",\n        onChange: (e, value) => setValue(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      onClick: e => handleAdd(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MonthlyForm, \"jhiIJX9q5oTRWR8jhImyMunDoEs=\", false, function () {\n  return [useMainState, useAllItemsState];\n});\n\n_c = MonthlyForm;\nexport default MonthlyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonthlyForm\");","map":{"version":3,"sources":["/Users/michaelchang/Desktop/wallet/src/components/MonthlyForm.js"],"names":["Button","CircularProgress","FormGroup","Input","InputAdornment","MenuItem","TextField","React","useState","useEffect","useSelector","categories","useDispatch","CurrencyTextField","useAllItemsState","useMainState","MonthlyForm","category","setCategory","value","setValue","enteringData","setEnteringData","loading","setLoading","list","setList","error","setError","description","setDescription","labels","setLabels","allItems","setAllItems","reset","generateColor","Math","random","toString","substring","handleAdd","setTimeout","newItem","id","length","label","Number","color","e","target","map","option"],"mappings":"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","sourcesContent":["import {\n  Button,\n  CircularProgress,\n  FormGroup,\n  Input,\n  InputAdornment,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { categories } from \"../constants/form\";\nimport { useDispatch } from \"react-redux\";\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\n\nimport { useAllItemsState, useMainState } from \"../reducers/mainReducer\";\n\nfunction MonthlyForm() {\n  const [category, setCategory] = useState(\"\");\n  const [value, setValue] = useState(0);\n  const [enteringData, setEnteringData] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [list, setList] = useState();\n  const [error, setError] = useState();\n  const [description, setDescription] = useState(\"\");\n  const { labels, setLabels } = useMainState();\n  const { allItems, setAllItems } = useAllItemsState();\n  useEffect(() => {\n    setList(labels);\n  }, [labels]);\n\n  const reset = () => {\n    setCategory(\"\");\n    setValue(0);\n    setDescription(\"\");\n    setEnteringData(true);\n    setLoading(false);\n  };\n  const generateColor = () => {\n    return \"#\" + (Math.random().toString(16) + \"000000\").substring(2, 8);\n  };\n\n  const handleAdd = () => {\n    setError(\"\");\n    setLoading(true);\n    setEnteringData(false);\n    setTimeout()\n    if (category && value) {\n      const newItem = {\n        id: allItems.length + 1,\n        label: category,\n        value: Number(value),\n        color: generateColor(), //\"#\" + Math.floor(Math.random() * 16777215).toString(16),\n        description: description,\n      };\n      setAllItems(newItem);\n      reset();\n    } else {\n      setError(\"error\");\n      setLoading(false);\n    }\n  };\n  return loading ? (\n    <CircularProgress />\n  ) : (\n    <FormGroup className=\"form_control\">\n      <div>\n        <TextField\n          className=\"form_control__input\"\n          id=\"standard-select-category\"\n          select\n          label=\"Select\"\n          value={category}\n          onChange={(e) => setCategory(e.target.value)}\n          helperText=\"Please select your category\"\n        >\n          {categories.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div>\n        <TextField\n          id=\"standard-multiline-flexible\"\n          label=\"Multiline\"\n          multiline\n          maxRows={4}\n          value={value}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n      </div>\n      <div>\n        <CurrencyTextField\n          className=\"form_control--input\"\n          label=\"Amount\"\n          variant=\"standard\"\n          value={value}\n          currencySymbol=\"$\"\n          minimumValue=\"0\"\n          outputFormat=\"string\"\n          decimalCharacter=\".\"\n          digitGroupSeparator=\",\"\n          onChange={(e, value) => setValue(value)}\n        />\n      </div>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        onClick={(e) => handleAdd()}\n      >\n        Submit\n      </Button>\n      <div> {error}</div>\n    </FormGroup>\n  );\n}\n\nexport default MonthlyForm;\n"]},"metadata":{},"sourceType":"module"}