{"ast":null,"code":"var _jsxFileName = \"/Users/michaelchang/Desktop/wallet/src/router/PrivateRoute.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport useToken, { isLogin } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  user,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (user) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...rest,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/unauthorized\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/michaelchang/Desktop/wallet/src/router/PrivateRoute.js"],"names":["React","useEffect","useState","Route","Redirect","useToken","isLogin","PrivateRoute","component","Component","user","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,QAAP,IAAmBC,OAAnB,QAAkC,UAAlC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8B,KAAGC;AAAjC,CAAD,KAA6C;AAChE,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,UAAIF,IAAJ,EAAU;AACR,4BAAO,QAAC,SAAD,OAAeC,IAAf;AAAA,aAAyBC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BACE,QAAC,QAAD;AACE,UAAA,EAAE,EAAE;AACFC,YAAAA,QAAQ,EAAE,eADR;AAEFC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AADP;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD;AACF;AAjBH;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtBD;;KAAMT,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport useToken, { isLogin } from \"../utils\";\n\nconst PrivateRoute = ({ component: Component, user, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (user) {\n          return <Component {...rest} {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/unauthorized\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}